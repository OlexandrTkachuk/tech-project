{"version":3,"file":"static/js/832.45e32f59.chunk.js","mappings":"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","sources":["services/fetchAPI.js","components/UserItem/UserItem.styled.jsx","components/UserItem/UserItem.jsx","components/UsersList/UsersList.styled.jsx","components/UsersList/UsersList.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://644651b50431e885f00ebcc7.mockapi.io/users/';\nconst LIMIT_PER_PAGE = 3;\n\nexport const fetchUsers = async (page, filter) => {\n  let queries;\n\n  if (filter.value === 'all') {\n    queries = '';\n  } else if (filter.value === 'follow') {\n    queries = `isFollowing=${false}`;\n  } else if (filter.value === 'following') {\n    queries = `isFollowing=${true}`;\n  }\n\n  try {\n    const response = await axios.get(\n      `/users?${queries}&page=${page}&limit=${LIMIT_PER_PAGE}`\n    );\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchfilteredUsers = async filter => {\n  let queries;\n\n  if (filter.value === 'all') {\n    queries = '';\n  } else if (filter.value === 'follow') {\n    queries = `isFollowing=${false}`;\n  } else if (filter.value === 'following') {\n    queries = `isFollowing=${true}`;\n  }\n\n  try {\n    const response = await axios.get(`/users?${queries}`);\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const updateUserInfo = async user => {\n  try {\n    const response = await axios.put(`/users/${user.id}`, {\n      ...user,\n      isFollowing: !user.isFollowing,\n      followers: user.isFollowing\n        ? (user.followers -= 1)\n        : (user.followers += 1),\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const CardWrapper = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  width: 380px;\n  height: 460px;\n  margin-bottom: 15px;\n  padding: 28px 36px 36px 36px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const FollowButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const FollowingButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  background: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const UserAvatar = styled.img`\n  display: block;\n  border-radius: 85.9232px;\n  position: absolute;\n  width: 62px;\n  height: 62px;\n  top: 185px;\n  left: 160px;\n  margin-bottom: 18px;\n  z-index: 999;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const Box = styled.div`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Frame = styled.img`\n  position: absolute;\n  width: 84px;\n  height: 84px;\n  top: 178px;\n  left: 150px;\n  border-radius: 50%;\n  z-index: 9999;\n`;\n\nexport const TextTweets = styled.h3`\n  font-family: 'Montserrat';\n  text-align: center;\n  margin-top: 88px;\n  margin-bottom: 16px;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n`;\n\nexport const TextFollowers = styled.h3`\n  font-family: 'Montserrat';\n  text-align: center;\n  margin-bottom: 26px;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n`;\n","// system\nimport {\n  CardWrapper,\n  Frame,\n  Logo,\n  UserAvatar,\n  Box,\n  TextTweets,\n  FollowButton,\n  FollowingButton,\n  TextFollowers,\n} from './UserItem.styled';\n\n// images\nimport logo from '../../images/Logo.png';\nimport background from '../../images/background.png';\nimport frame from '../../images/Ellipse.png';\n\nconst TodoItem = ({ user, onFollow }) => {\n  const { avatar, tweets, followers, isFollowing } = user;\n\n  return (\n    <>\n      <CardWrapper>\n        <Logo src={logo} alt=\"logo\" />\n        <img src={background} alt=\"background\" />\n        <Frame src={frame} alt=\"user avatar\" />\n        <UserAvatar src={avatar} alt=\"User Avatar\" />\n\n        <Box />\n\n        <TextTweets>{tweets} tweets</TextTweets>\n        <TextFollowers>\n          {followers.toLocaleString('en-US')} followers\n        </TextFollowers>\n\n        {!isFollowing ? (\n          <FollowButton onClick={() => onFollow(user)} type=\"button\">\n            follow\n          </FollowButton>\n        ) : (\n          <FollowingButton onClick={() => onFollow(user)} type=\"button\">\n            following\n          </FollowingButton>\n        )}\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport Select from 'react-select';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 26px;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 390px;\n  justify-content: space-between;\n`;\n\nexport const FilterHeading = styled.h2`\n  color: #000;\n  font-size: 16px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const Filter = styled(Select)`\n  width: 230px;\n  primary25: '#471ca9';\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #000;\n  font-size: 16px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const TodoGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  margin-top: 18px;\n  margin-bottom: 36px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #fff;\n  cursor: pointer;\n  background-color: #7440ec;\n  border: none;\n\n  :disabled {\n    color: #000;\n    background-color: lightgrey;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n","// system\nimport { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useLocation } from 'react-router-dom';\n\n// services\nimport {\n  fetchUsers,\n  fetchfilteredUsers,\n  updateUserInfo,\n} from 'services/fetchAPI';\n\n// components\nimport TodoItem from 'components/UserItem/UserItem';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\n// styles\nimport {\n  BackLink,\n  Container,\n  TodoGallery,\n  Button,\n  ButtonWrapper,\n  FilterWrapper,\n  FilterHeading,\n  Filter,\n  Wrapper,\n} from './UsersList.styled';\n\nconst options = [\n  { value: 'all', label: 'All' },\n  { value: 'follow', label: 'Follow' },\n  { value: 'following', label: 'Following' },\n];\n\nconst TodoList = () => {\n  const queryClient = useQueryClient();\n  const [page, setPage] = useState(1);\n  const [selectedOption, setSelectedOption] = useState('all');\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (selectedOption) {\n      setPage(1);\n    }\n  }, [selectedOption]);\n\n  const updateUserMutation = useMutation(item => updateUserInfo(item), {\n    onSuccess: () => {\n      queryClient.invalidateQueries('users');\n    },\n  });\n\n  const { data, isLoading, isError } = useQuery(\n    ['users', page, selectedOption],\n    () => fetchUsers(page, selectedOption),\n    { keepPreviousData: true }\n  );\n\n  const {\n    data: filter,\n    isError: filterError,\n    isFetched,\n  } = useQuery(\n    ['users', selectedOption],\n    () => fetchfilteredUsers(selectedOption),\n    { keepPreviousData: true }\n  );\n\n  const handlePrevPage = () => setPage(prev => (prev -= 1));\n  const handleNextPage = () => setPage(prev => (prev += 1));\n  const handleFollowUser = users => updateUserMutation.mutate(users);\n\n  if (isError) {\n    return <p>{console.alert('Smth going wrong')}</p>;\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <Container>\n          <Wrapper>\n            <BackLink to={backLinkHref}>Back home</BackLink>\n\n            <FilterWrapper>\n              <FilterHeading>Filter by status:</FilterHeading>\n              <Filter\n                name=\"Filter by status\"\n                defaultValue={selectedOption[0]}\n                onChange={setSelectedOption}\n                options={options}\n              />\n            </FilterWrapper>\n          </Wrapper>\n\n          <TodoGallery className=\"gallery\">\n            {data.map(user => {\n              return (\n                <TodoItem\n                  key={user.id}\n                  user={user}\n                  onFollow={handleFollowUser}\n                />\n              );\n            })}\n          </TodoGallery>\n\n          {isFetched && !filterError && filter.length > 3 && (\n            <ButtonWrapper>\n              <Button\n                disabled={isLoading || page === 1}\n                onClick={handlePrevPage}\n                type=\"button\"\n              >\n                previous\n              </Button>\n              <Button\n                disabled={isLoading || page === filter.length / 3}\n                onClick={handleNextPage}\n                type=\"button\"\n              >\n                next\n              </Button>\n            </ButtonWrapper>\n          )}\n        </Container>\n      )}{' '}\n    </>\n  );\n};\n\nexport default TodoList;\n","import UsersList from 'components/UsersList/UsersList';\n\nconst Tweets = () => {\n  return (\n    <main>\n      <UsersList />\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["axios","fetchUsers","page","filter","value","queries","response","data","Error","fetchfilteredUsers","updateUserInfo","user","id","isFollowing","followers","CardWrapper","styled","FollowButton","FollowingButton","UserAvatar","Logo","Box","Frame","TextTweets","TextFollowers","onFollow","avatar","tweets","src","alt","background","toLocaleString","onClick","type","Container","Wrapper","FilterWrapper","FilterHeading","Filter","Select","BackLink","NavLink","TodoGallery","Button","ButtonWrapper","options","label","queryClient","useQueryClient","useState","setPage","selectedOption","setSelectedOption","backLinkHref","useLocation","state","from","useEffect","updateUserMutation","useMutation","item","onSuccess","invalidateQueries","useQuery","keepPreviousData","isLoading","isError","filterError","isFetched","handleFollowUser","users","mutate","console","alert","LoadingSpinner","to","name","defaultValue","onChange","className","map","length","disabled","prev","UsersList"],"sourceRoot":""}