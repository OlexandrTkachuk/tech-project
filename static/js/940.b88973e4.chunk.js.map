{"version":3,"file":"static/js/940.b88973e4.chunk.js","mappings":"yRAEaA,EAAcC,EAAAA,EAAAA,GAAH,4bAqBXC,EAAeD,EAAAA,EAAAA,OAAH,8dAsBZE,EAAkBF,EAAAA,EAAAA,OAAH,8dAsBfG,EAAaH,EAAAA,EAAAA,IAAH,wMAYVI,EAAOJ,EAAAA,EAAAA,IAAH,4EAMJK,EAAML,EAAAA,EAAAA,IAAH,oRAWHM,EAAQN,EAAAA,EAAAA,IAAH,wJAULO,EAAaP,EAAAA,EAAAA,GAAH,0OAYVQ,EAAgBR,EAAAA,EAAAA,GAAH,qN,kECpE1B,EAhCiB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KACVC,EAA2CD,EAA3CC,OAAQC,EAAmCF,EAAnCE,OAAQC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,YAEnC,OACE,+BACE,UAACd,EAAD,YACE,SAACK,EAAD,CAAMU,I,i/BAAWC,IAAI,UACrB,gBAAKD,IAAKE,EAAYD,IAAI,gBAC1B,SAACT,EAAD,CAAOQ,I,64TAAYC,IAAI,iBACvB,SAACZ,EAAD,CAAYW,IAAKJ,EAAQK,IAAI,iBAE7B,SAACV,EAAD,KAEA,UAACE,EAAD,WAAaI,EAAb,cACA,UAACH,EAAD,WACGI,EAAUK,eAAe,SAD5B,gBAIEJ,GAKA,SAACX,EAAD,CAAiBgB,QAAS,WAAQ,EAAEC,KAAK,SAAzC,wBAJA,SAAClB,EAAD,CAAciB,QAAS,WAAQ,EAAEC,KAAK,SAAtC,wBAWT,E,oBC7CYC,EAAYpB,EAAAA,EAAAA,IAAH,8CAITqB,GAAWrB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAH,uQAeRuB,EAAcvB,EAAAA,EAAAA,GAAH,wHAOXwB,EAASxB,EAAAA,EAAAA,OAAH,mfAuBNyB,EAAgBzB,EAAAA,EAAAA,IAAH,4ECuB1B,EAxDiB,WAAO,IAAD,IACf0B,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,KAAhB,IACzBC,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMI,SAAhB,IAE7BC,EAAY,qBADDC,EAAAA,EAAAA,MACaJ,aAAZ,aAAG,EAAgBK,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACRb,GAASc,EAAAA,EAAAA,GAAWX,GACrB,GAAE,CAACH,EAAUG,IAOd,OAFAY,QAAQC,IAAIb,IAGV,gCACGM,GACC,SAACQ,EAAA,EAAD,KAEA,UAACvB,EAAD,YACE,SAACC,EAAD,CAAUuB,GAAIR,EAAd,wBAEA,SAACb,EAAD,CAAasB,UAAU,UAAvB,SACGd,EAAMe,KAAI,SAAArC,GACT,OAAO,SAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKsC,GAC5B,OAGH,UAACtB,EAAD,YACE,SAACD,EAAD,CACEwB,SAAUb,GAAsB,IAATN,EACvBX,QAtBW,kBAAMY,GAAQ,SAAAmB,GAAI,OAAKA,EAAQ,CAAb,GAAlB,EAuBX9B,KAAK,SAHP,uBAQA,SAACK,EAAD,CACEwB,SAAUb,GAAsB,IAATN,EACvBX,QA7BW,kBAAMY,GAAQ,SAAAmB,GAAI,OAAKA,EAAQ,CAAb,GAAlB,EA8BX9B,KAAK,SAHP,wBAWH,MAGR,EC/DD,EARe,WACb,OACE,2BACE,SAAC,EAAD,KAGL,C","sources":["components/TodoItem/TodoItem.styled.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.styled.jsx","components/TodoList/TodoList.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardWrapper = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  width: 380px;\n  height: 460px;\n  margin-bottom: 15px;\n  padding: 28px 36px 36px 36px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const FollowButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const FollowingButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  background: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const UserAvatar = styled.img`\n  display: block;\n  border-radius: 85.9232px;\n  position: absolute;\n  width: 62px;\n  height: 62px;\n  top: 185px;\n  left: 160px;\n  margin-bottom: 18px;\n  z-index: 999;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const Box = styled.div`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Frame = styled.img`\n  position: absolute;\n  width: 84px;\n  height: 84px;\n  top: 178px;\n  left: 150px;\n  border-radius: 50%;\n  z-index: 9999;\n`;\n\nexport const TextTweets = styled.h3`\n  font-family: 'Montserrat';\n  text-align: center;\n  margin-top: 88px;\n  margin-bottom: 16px;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n`;\n\nexport const TextFollowers = styled.h3`\n  font-family: 'Montserrat';\n  text-align: center;\n  margin-bottom: 26px;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n`;\n","// system\nimport {\n  CardWrapper,\n  Frame,\n  Logo,\n  UserAvatar,\n  Box,\n  TextTweets,\n  FollowButton,\n  FollowingButton,\n  TextFollowers,\n} from './TodoItem.styled';\n\n// images\nimport logo from '../../images/Logo.png';\nimport background from '../../images/background.png';\nimport frame from '../../images/Ellipse.png';\n\nconst TodoItem = ({ user }) => {\n  const { avatar, tweets, followers, ifFollowing } = user;\n\n  return (\n    <>\n      <CardWrapper>\n        <Logo src={logo} alt=\"logo\" />\n        <img src={background} alt=\"background\" />\n        <Frame src={frame} alt=\"user avatar\" />\n        <UserAvatar src={avatar} alt=\"User Avatar\" />\n\n        <Box />\n\n        <TextTweets>{tweets} tweets</TextTweets>\n        <TextFollowers>\n          {followers.toLocaleString('en-US')} followers\n        </TextFollowers>\n\n        {!ifFollowing ? (\n          <FollowButton onClick={() => {}} type=\"button\">\n            follow\n          </FollowButton>\n        ) : (\n          <FollowingButton onClick={() => {}} type=\"button\">\n            following\n          </FollowingButton>\n        )}\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n  margin-bottom: 20px;\n`;\n\nexport const TodoGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  position: relative;\n  width: 196px;\n  height: 50px;\n  margin-top: 18px;\n  margin-bottom: 36px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n","// system\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchUsers } from 'redux/operatons';\n\n// components\nimport TodoItem from 'components/TodoItem/TodoItem';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\n// styles\nimport {\n  BackLink,\n  Container,\n  TodoGallery,\n  Button,\n  ButtonWrapper,\n} from './TodoList.styled';\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const users = useSelector(state => state.users.items);\n  const isLoading = useSelector(state => state.users.isLoading);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    dispatch(fetchUsers(page));\n  }, [dispatch, page]);\n\n  const handlePrevPage = () => setPage(prev => (prev -= 1));\n  const handleNextPage = () => setPage(prev => (prev += 1));\n\n  console.log(page);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <Container>\n          <BackLink to={backLinkHref}>Back home</BackLink>\n\n          <TodoGallery className=\"gallery\">\n            {users.map(user => {\n              return <TodoItem key={user.id} user={user} />;\n            })}\n          </TodoGallery>\n\n          <ButtonWrapper>\n            <Button\n              disabled={isLoading || page === 1}\n              onClick={handlePrevPage}\n              type=\"button\"\n            >\n              previous\n            </Button>\n\n            <Button\n              disabled={isLoading || page === 6}\n              onClick={handleNextPage}\n              type=\"button\"\n            >\n              next\n            </Button>\n            </ButtonWrapper>\n            \n          \n        </Container>\n      )}{' '}\n    </>\n  );\n};\n\nexport default TodoList;\n","import TodoList from 'components/TodoList/TodoList';\n\nconst Tweets = () => {\n  return (\n    <main>\n      <TodoList />\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["CardWrapper","styled","FollowButton","FollowingButton","UserAvatar","Logo","Box","Frame","TextTweets","TextFollowers","user","avatar","tweets","followers","ifFollowing","src","alt","background","toLocaleString","onClick","type","Container","BackLink","NavLink","TodoGallery","Button","ButtonWrapper","dispatch","useDispatch","useState","page","setPage","users","useSelector","state","items","isLoading","backLinkHref","useLocation","from","useEffect","fetchUsers","console","log","LoadingSpinner","to","className","map","id","disabled","prev"],"sourceRoot":""}